AllCops:
  DisplayCopNames: true
  DisplayStyleGuide: true
  Exclude:
    - vendor/**/*
    - db/schema.rb
    - node_modules/**/*
    - tmp/**/*
    - lib/prod_util/*
    - lib/tasks/one_offs/**/*
    - lib/tasks/tests.rake
    - app/migrators/**/*
    - lib/google/apis/**/*
    - bin/*
    - Rakefile
    - config.ru
    - '*legacy*'
    - config/initializers/monkey_patches/**/*
    - db/seeds/**/*
    - app/assets/**/*
    - public/assets/**/*
    - "spec/factories/**/*"
    - "spec/fixtures/**/*"
    - "*/spec/fixtures/**/*"
    - '*.gem'
  NewCops: enable
Bundler/OrderedGems:
  Enabled: false
Gemspec/OrderedDependencies:
  Enabled: false
Layout/AccessModifierIndentation:
  Enabled: true
Layout/ArgumentAlignment:
  Enabled: false
Layout/ArrayAlignment:
  Enabled: true
Layout/AssignmentIndentation:
  Enabled: true
Layout/BeginEndAlignment:
  Enabled: false
Layout/BlockAlignment:
  Enabled: false # Because the auto-corrector seems to mess this up some times.
Layout/BlockEndNewline:
  Enabled: true
Layout/CaseIndentation:
  Enabled: false # Because the auto-corrector seems to mess this up some times.
Layout/ClosingHeredocIndentation:
  Enabled: true
Layout/ClosingParenthesisIndentation:
  Enabled: true
Layout/CommentIndentation:
  Enabled: true
Layout/DefEndAlignment:
  Enabled: true
Layout/DotPosition:
  Enabled: true
Layout/ElseAlignment:
  Enabled: true
Layout/EmptyLineAfterGuardClause:
  Enabled: true
Layout/EmptyLineAfterMagicComment:
  Enabled: true
Layout/EmptyLineBetweenDefs:
  Enabled: true
Layout/EmptyLines:
  Enabled: true
Layout/EmptyLinesAroundAccessModifier:
  Enabled: true
Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: true
Layout/EmptyLinesAroundBeginBody:
  Enabled: true
Layout/EmptyLinesAroundBlockBody:
  Enabled: true
Layout/EmptyLinesAroundClassBody:
  Enabled: true
Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Enabled: true
Layout/EmptyLinesAroundMethodBody:
  Enabled: true
Layout/EmptyLinesAroundModuleBody:
  Enabled: true
Layout/EndAlignment:
  Enabled: true
Layout/EndOfLine:
  Enabled: true
Layout/ExtraSpacing:
  Enabled: true
Layout/FirstArgumentIndentation:
  Enabled: true
Layout/FirstArrayElementIndentation:
  Enabled: true
Layout/FirstHashElementIndentation:
  Enabled: false
Layout/FirstParameterIndentation:
  Enabled: true
Layout/HashAlignment:
  Enabled: false
Layout/HeredocArgumentClosingParenthesis:
  Enabled: true
Layout/HeredocIndentation:
  Enabled: false
Layout/IndentationConsistency:
  Enabled: true
Layout/IndentationWidth:
  Enabled: false
Layout/InitialIndentation:
  Enabled: true
Layout/LeadingCommentSpace:
  Enabled: true
Layout/LeadingEmptyLines:
  Enabled: true
Layout/LineLength:
  AllowedPatterns:
    - ^\s*#
    - ^\s*([a-zA-Z]*[lL]og[a-zA-Z]*)[ (]
    - ^\s*['"]
    - .*#.{30,300}
    - ^\s*[a-z_]:\s*".+",?[}\s]*$
  Max: 200
  Exclude:
    - '*/spec/**/*.rb '# Nicer to have sample data on a single long line
    - 'spec/**/*.rb'
Layout/LineContinuationLeadingSpace:
  Enabled: true
  Exclude:
    - '*/spec/**/*.rb ' # Just a pain for specs that contain lots of sample data.
    - 'spec/**/*.rb'
Layout/MultilineArrayBraceLayout:
  Enabled: false
Layout/MultilineAssignmentLayout:
  Enabled: false
Layout/MultilineBlockLayout:
  Enabled: false
Layout/MultilineHashBraceLayout:
  Enabled: false
Layout/MultilineMethodCallBraceLayout:
  Enabled: false
Layout/MultilineMethodCallIndentation:
  Enabled: false
Layout/MultilineMethodDefinitionBraceLayout:
  Enabled: false
Layout/MultilineOperationIndentation:
  Enabled: false
Layout/ParameterAlignment:
  Enabled: false
Layout/RescueEnsureAlignment:
  Enabled: false
Layout/SpaceAfterColon:
  Enabled: true
Layout/SpaceAfterComma:
  Enabled: true
Layout/SpaceAfterMethodName:
  Enabled: true
Layout/SpaceAfterNot:
  Enabled: false
Layout/SpaceAfterSemicolon:
  Enabled: true
Layout/SpaceAroundBlockParameters:
  Enabled: true
Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true
Layout/SpaceAroundKeyword:
  Enabled: true
Layout/SpaceAroundMethodCallOperator:
  Enabled: true
Layout/SpaceAroundOperators:
  Enabled: true
Layout/SpaceBeforeBlockBraces:
  Enabled: false
Layout/SpaceBeforeComma:
  Enabled: true
Layout/SpaceBeforeComment:
  Enabled: true
Layout/SpaceBeforeFirstArg:
  Enabled: true
Layout/SpaceBeforeSemicolon:
  Enabled: true
Layout/SpaceInLambdaLiteral:
  Enabled: false
Layout/SpaceInsideArrayLiteralBrackets:
  Enabled: true
Layout/SpaceInsideArrayPercentLiteral:
  Enabled: true
Layout/SpaceInsideBlockBraces:
  Enabled: true
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true
Layout/SpaceInsideParens:
  Enabled: true
Layout/SpaceInsidePercentLiteralDelimiters:
  Enabled: true
Layout/SpaceInsideRangeLiteral:
  Enabled: true
Layout/SpaceInsideReferenceBrackets:
  Enabled: true
Layout/SpaceInsideStringInterpolation:
  EnforcedStyle: space
Layout/TrailingEmptyLines:
  Enabled: true
Layout/TrailingWhitespace:
  Enabled: true
Lint/AmbiguousRegexpLiteral:
  Enabled: false
Lint/AmbiguousBlockAssociation:
  Enabled: true
  Exclude:
    - '*/spec/**/*.rb' # Legit concern but it's too hard for us to solve existing problems
    - 'spec/**/*.rb'
Lint/AssignmentInCondition:
  Enabled: false
Lint/EmptyWhen:
  Enabled: true
Lint/EmptyBlock:
  Enabled: true
  Exclude:
    - '*/spec/**/*.rb' # Empty let blocks are useful in specs
    - 'spec/**/*.rb'
Lint/Loop:
  Enabled: true
Lint/NonLocalExitFromIterator:
  Enabled: false
Lint/RedundantCopDisableDirective:
  Enabled: true
Lint/RescueException:
  Enabled: true
Lint/SuppressedException:
  Enabled: true
Lint/UnusedBlockArgument:
  Enabled: true
Lint/UnusedMethodArgument:
  Enabled: true
Lint/Void:
  Enabled: true
  Exclude:
    - '*/spec/**/*.rb' # Sometimes we need to call a variable to trigger the "let" action.
    - 'spec/**/*.rb'
Metrics/AbcSize:
  Enabled: false
  Max: 60
Metrics/BlockLength:
  Exclude:
    - Rakefile
    - '**/*.rake'
    - config/routes.rb
    - '*/spec/**/*.rb' # Some blocks can be really long with sample data
    - 'spec/**/*.rb'
  Max: 200
Metrics/BlockNesting:
  Enabled: true
Metrics/ClassLength:
  Enabled: false
Metrics/CyclomaticComplexity:
  Max: 60
Metrics/MethodLength:
  Enabled: false
Metrics/ModuleLength:
  Enabled: false
Metrics/ParameterLists:
  Enabled: true
  Max: 7
Metrics/PerceivedComplexity:
  Enabled: false
Naming/AccessorMethodName:
  Enabled: true
Naming/BinaryOperatorParameterName:
  Enabled: true
Naming/BlockParameterName:
  Enabled: true
Naming/ConstantName:
  Enabled: true
Naming/FileName:
  Enabled: true
Naming/HeredocDelimiterNaming:
  Enabled: true
Naming/MemoizedInstanceVariableName:
  Enabled: false
Naming/MethodName:
  Enabled: true
Naming/MethodParameterName:
  Enabled: true
Naming/PredicateName:
  Enabled: false
Naming/RescuedExceptionsVariableName:
  Enabled: true
Naming/VariableName:
  Enabled: true
Naming/VariableNumber:
  Enabled: false
Security/Eval:
  Enabled: true
Security/MarshalLoad:
  Enabled: true
Security/YAMLLoad:
  Enabled: true
Style/AccessModifierDeclarations:
  Enabled: true
Style/AccessorGrouping:
  Enabled: true
Style/Alias:
  Enabled: true
  EnforcedStyle: prefer_alias_method
Style/AndOr:
  Enabled: true
Style/ArrayCoercion:
  Enabled: true
Style/ArrayJoin:
  Enabled: true
Style/AsciiComments:
  Enabled: false
Style/Attr:
  Enabled: true
Style/AutoResourceCleanup:
  Enabled: true
Style/BarePercentLiterals:
  Enabled: true
Style/BeginBlock:
  Enabled: true
Style/BisectedAttrAccessor:
  Enabled: true
Style/BlockComments:
  Enabled: true
Style/BlockDelimiters:
  Enabled: true
  Exclude:
    - '*/spec/**/*.rb' # Curly braces are more common for spec let statements and factories
    - 'spec/**/*.rb'
Style/CaseEquality:
  Enabled: true
Style/CaseLikeIf:
  Enabled: false
Style/CharacterLiteral:
  Enabled: true
Style/ClassAndModuleChildren:
  Enabled: true
Style/ClassCheck:
  Enabled: true
Style/ClassMethods:
  Enabled: true
Style/ClassVars:
  Enabled: true
Style/CollectionMethods:
  Enabled: true
Style/ColonMethodCall:
  Enabled: true
Style/ColonMethodDefinition:
  Enabled: true
Style/CommandLiteral:
  Enabled: true
Style/CommentAnnotation:
  Enabled: false
Style/CommentedKeyword:
  Enabled: false
Style/ConditionalAssignment:
  Enabled: true
Style/ConstantVisibility:
  Enabled: false
Style/Copyright:
  Enabled: false
Style/DateTime:
  Enabled: true
Style/DefWithParentheses:
  Enabled: true
Style/Dir:
  Enabled: true
Style/DisableCopsWithinSourceCodeDirective:
  Enabled: false
Style/Documentation:
  Enabled: false
Style/DocumentationMethod:
  Enabled: false
Style/DoubleCopDisableDirective:
  Enabled: true
Style/DoubleNegation:
  Enabled: true
Style/EachForSimpleLoop:
  Enabled: true
Style/EachWithObject:
  Enabled: true
Style/EmptyBlockParameter:
  Enabled: true
Style/EmptyCaseCondition:
  Enabled: true
Style/EmptyElse:
  Enabled: true
  AllowComments: true # When a comment is there then it means the programmer thought about the case so we can ignore it.
  EnforcedStyle: empty # When a comment or nil is there it means the programmer thought about the case, so there is no need for concern
Style/EmptyLambdaParameter:
  Enabled: true
Style/EmptyLiteral:
  Enabled: true
Style/EmptyMethod:
  Enabled: true
Style/Encoding:
  Enabled: true
Style/EndBlock:
  Enabled: true
Style/EvalWithLocation:
  Enabled: true
Style/EvenOdd:
  Enabled: true
Style/ExpandPathArguments:
  Enabled: true
Style/ExplicitBlockArgument:
  Enabled: true
Style/ExponentialNotation:
  Enabled: true
Style/FloatDivision:
  Enabled: false
Style/For:
  Enabled: true
Style/FormatString:
  Enabled: true
Style/FormatStringToken:
  Enabled: true
Style/FrozenStringLiteralComment:
  Enabled: false
Style/GlobalStdStream:
  Enabled: true
Style/GlobalVars:
  Enabled: false
Style/GuardClause:
  Enabled: false
Style/HashAsLastArrayItem:
  Enabled: true
Style/HashEachMethods:
  Enabled: true
Style/HashLikeCase:
  Enabled: true
Style/HashSyntax:
  Enabled: true
Style/HashTransformKeys:
  Enabled: true
Style/HashTransformValues:
  Enabled: true
Style/IdenticalConditionalBranches:
  Enabled: true
Style/IfInsideElse:
  Enabled: true
Style/IfUnlessModifier:
  Enabled: false
Style/IfUnlessModifierOfIfUnless:
  Enabled: true
Style/IfWithSemicolon:
  Enabled: true
Style/ImplicitRuntimeError:
  Enabled: false
Style/InfiniteLoop:
  Enabled: true
Style/InlineComment:
  Enabled: false
Style/InverseMethods:
  Enabled: true
Style/IpAddresses:
  Enabled: false # This is obvious and should be caught in the PR if not OK.
Style/Lambda:
  Enabled: false
Style/LambdaCall:
  Enabled: false
Style/LineEndConcatenation:
  Enabled: true
Style/MapToHash:
  Enabled: false
Style/MethodCallWithArgsParentheses:
  Enabled: false
Style/MethodCallWithoutArgsParentheses:
  Enabled: true
Style/MethodCalledOnDoEndBlock:
  Enabled: false
Style/MethodDefParentheses:
  Enabled: true
Style/MinMax:
  Enabled: true
Style/MissingElse:
  Enabled: false
Style/MissingRespondToMissing:
  Enabled: true
Style/MixinGrouping:
  Enabled: true
Style/ModuleFunction:
  Enabled: true
Style/MultilineBlockChain:
  Enabled: false
Style/MultilineIfModifier:
  Enabled: true
Style/MultilineIfThen:
  Enabled: true
Style/MultilineMemoization:
  Enabled: true
Style/MultilineMethodSignature:
  Enabled: true
Style/MultilineTernaryOperator:
  Enabled: true
Style/MultilineWhenThen:
  Enabled: true
Style/MultipleComparison:
  Enabled: true
Style/MutableConstant:
  Enabled: false
Style/NegatedIf:
  Enabled: true
Style/NegatedUnless:
  Enabled: true
Style/NegatedWhile:
  Enabled: true
Style/NestedModifier:
  Enabled: true
Style/NestedParenthesizedCalls:
  Enabled: true
Style/NestedTernaryOperator:
  Enabled: true
Style/Next:
  Enabled: true
Style/NilComparison:
  Enabled: true
Style/NonNilCheck:
  Enabled: true
Style/Not:
  Enabled: true
Style/NumericLiteralPrefix:
  Enabled: true
Style/NumericLiterals:
  Enabled: true
Style/NumericPredicate:
  Enabled: false
Style/OneLineConditional:
  Enabled: true
Style/OpenStructUse:
  Enabled: false
Style/OptionHash:
  Enabled: false
Style/OptionalArguments:
  Enabled: true
Style/OptionalBooleanParameter:
  Enabled: false
Style/OrAssignment:
  Enabled: true
Style/ParallelAssignment:
  Enabled: true
Style/ParenthesesAroundCondition:
  Enabled: true
Style/PercentLiteralDelimiters:
  Enabled: true
Style/PercentQLiterals:
  Enabled: true
Style/PerlBackrefs:
  Enabled: true
Style/PreferredHashMethods:
  Enabled: true
Style/Proc:
  Enabled: true
Style/RaiseArgs:
  Enabled: true
Style/RandomWithOffset:
  Enabled: true
Style/RedundantAssignment:
  Enabled: true
Style/RedundantBegin:
  Enabled: true
Style/RedundantCapitalW:
  Enabled: true
Style/RedundantCondition:
  Enabled: true
Style/RedundantConditional:
  Enabled: true
Style/RedundantException:
  Enabled: true
Style/RedundantFetchBlock:
  Enabled: true
Style/RedundantFileExtensionInRequire:
  Enabled: true
Style/RedundantFreeze:
  Enabled: true
Style/RedundantInterpolation:
  Enabled: true
Style/RedundantParentheses:
  Enabled: true
Style/RedundantPercentQ:
  Enabled: true
Style/RedundantRegexpCharacterClass:
  Enabled: false
Style/RedundantRegexpEscape:
  Enabled: false
Style/RedundantReturn:
  Enabled: true
Style/RedundantSelf:
  Enabled: false
Style/RedundantSort:
  Enabled: true
Style/RedundantSortBy:
  Enabled: true
Style/RegexpLiteral:
  Enabled: false
Style/RescueModifier:
  Enabled: true
Style/RescueStandardError:
  Enabled: true
Style/ReturnNil:
  Enabled: false
Style/SafeNavigation:
  Enabled: true
Style/Sample:
  Enabled: true
Style/SelfAssignment:
  Enabled: true
Style/Semicolon:
  Enabled: true
Style/Send:
  Enabled: false
Style/SignalException:
  Enabled: true
Style/SingleArgumentDig:
  Enabled: true
Style/SingleLineBlockParams:
  Enabled: true
Style/SingleLineMethods:
  Enabled: false
Style/SlicingWithRange:
  Enabled: true
Style/SpecialGlobalVars:
  Enabled: true
Style/StabbyLambdaParentheses:
  Enabled: true
Style/StderrPuts:
  Enabled: true
Style/StringConcatenation:
  Enabled: true
Style/StringLiterals:
  Enabled: false
Style/StringLiteralsInInterpolation:
  Enabled: true
Style/StringMethods:
  Enabled: true
Style/Strip:
  Enabled: true
Style/StructInheritance:
  Enabled: true
Style/SymbolArray:
  Enabled: false
Style/SymbolLiteral:
  Enabled: true
Style/SymbolProc:
  Enabled: true
Style/TernaryParentheses:
  Enabled: false
Style/TrailingBodyOnClass:
  Enabled: true
Style/TrailingBodyOnMethodDefinition:
  Enabled: true
Style/TrailingBodyOnModule:
  Enabled: true
Style/TrailingCommaInArguments:
  Enabled: true
Style/TrailingCommaInArrayLiteral:
  Enabled: true
  EnforcedStyleForMultiline: consistent_comma
Style/TrailingCommaInBlockArgs:
  Enabled: true
Style/TrailingCommaInHashLiteral:
  Enabled: true
  EnforcedStyleForMultiline: consistent_comma # It makes managing hashes much easier when we have commas at the end
Style/TrailingMethodEndStatement:
  Enabled: true
Style/TrailingUnderscoreVariable:
  Enabled: true
Style/TrivialAccessors:
  Enabled: true
Style/UnlessElse:
  Enabled: true
Style/UnpackFirst:
  Enabled: true
Style/VariableInterpolation:
  Enabled: true
Style/WhenThen:
  Enabled: true
Style/WhileUntilDo:
  Enabled: true
Style/WhileUntilModifier:
  Enabled: true
Style/WordArray:
  Enabled: true
Style/YodaCondition:
  Enabled: true
Style/ZeroLengthPredicate:
  Enabled: false
